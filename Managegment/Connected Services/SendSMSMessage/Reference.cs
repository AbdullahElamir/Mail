//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SendSMSMessage
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserToSendEmailOrSMS", Namespace="http://schemas.datacontract.org/2004/07/SMSServices")]
    public partial class UserToSendEmailOrSMS : object
    {
        
        private long ConversationIDField;
        
        private System.Nullable<bool> IsSendSMSField;
        
        private string PhoneField;
        
        private long UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConversationID
        {
            get
            {
                return this.ConversationIDField;
            }
            set
            {
                this.ConversationIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSendSMS
        {
            get
            {
                return this.IsSendSMSField;
            }
            set
            {
                this.IsSendSMSField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendMessages", Namespace="http://schemas.datacontract.org/2004/07/SMSServices")]
    public partial class SendMessages : object
    {
        
        private string AdTypeNameField;
        
        private long ConversationIDField;
        
        private string DateConversationField;
        
        private bool IsAttachmentField;
        
        private string SubjectField;
        
        private string SubjectBodyField;
        
        private string UserNameField;
        
        private System.Nullable<long> UserSenderIDField;
        
        private System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> UsersSenderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdTypeName
        {
            get
            {
                return this.AdTypeNameField;
            }
            set
            {
                this.AdTypeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConversationID
        {
            get
            {
                return this.ConversationIDField;
            }
            set
            {
                this.ConversationIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateConversation
        {
            get
            {
                return this.DateConversationField;
            }
            set
            {
                this.DateConversationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAttachment
        {
            get
            {
                return this.IsAttachmentField;
            }
            set
            {
                this.IsAttachmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectBody
        {
            get
            {
                return this.SubjectBodyField;
            }
            set
            {
                this.SubjectBodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserSenderID
        {
            get
            {
                return this.UserSenderIDField;
            }
            set
            {
                this.UserSenderIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> UsersSender
        {
            get
            {
                return this.UsersSenderField;
            }
            set
            {
                this.UsersSenderField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SendSMSMessage.IMessageServices")]
    public interface IMessageServices
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageServices/SendSMS", ReplyAction="http://tempuri.org/IMessageServices/SendSMSResponse")]
        System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> SendSMS(string sms, System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageServices/SendSMS", ReplyAction="http://tempuri.org/IMessageServices/SendSMSResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS>> SendSMSAsync(string sms, System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageServices/SendMessageSMS", ReplyAction="http://tempuri.org/IMessageServices/SendMessageSMSResponse")]
        System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> SendMessageSMS(System.Collections.Generic.List<SendSMSMessage.SendMessages> messages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageServices/SendMessageSMS", ReplyAction="http://tempuri.org/IMessageServices/SendMessageSMSResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS>> SendMessageSMSAsync(System.Collections.Generic.List<SendSMSMessage.SendMessages> messages);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public interface IMessageServicesChannel : SendSMSMessage.IMessageServices, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30514-0828")]
    public partial class MessageServicesClient : System.ServiceModel.ClientBase<SendSMSMessage.IMessageServices>, SendSMSMessage.IMessageServices
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MessageServicesClient() : 
                base(MessageServicesClient.GetDefaultBinding(), MessageServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISIM.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(MessageServicesClient.GetBindingForEndpoint(endpointConfiguration), MessageServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MessageServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MessageServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MessageServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> SendSMS(string sms, System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> phone)
        {
            return base.Channel.SendSMS(sms, phone);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS>> SendSMSAsync(string sms, System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> phone)
        {
            return base.Channel.SendSMSAsync(sms, phone);
        }
        
        public System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS> SendMessageSMS(System.Collections.Generic.List<SendSMSMessage.SendMessages> messages)
        {
            return base.Channel.SendMessageSMS(messages);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SendSMSMessage.UserToSendEmailOrSMS>> SendMessageSMSAsync(System.Collections.Generic.List<SendSMSMessage.SendMessages> messages)
        {
            return base.Channel.SendMessageSMSAsync(messages);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISIM))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISIM))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:58715/MessageServices.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MessageServicesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISIM);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MessageServicesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISIM);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISIM,
        }
    }
}
